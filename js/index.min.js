"use strict";function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}var playing=!0,timer=function(){return setInterval(function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1},1e3)},interval=timer(),minus=document.getElementById("minus"),plus=document.getElementById("plus"),heart=document.getElementById("heart"),pause=document.getElementById("pause"),commentForm=document.getElementsByTagName("form")[0];minus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b-1}),plus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1}),heart.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText),c=document.querySelector(".likes"),d=void 0;if([].concat(_toConsumableArray(c.children)).map(function(a){return parseInt(a.dataset.num)}).includes(b)){d=document.querySelector('[data-num="'+b+'"]');var e=parseInt(d.children[0].innerText);d.innerHTML=b+" has been liked <span>"+(e+1)+"</span> times"}else(d=document.createElement("li")).setAttribute("data-num",b),d.innerHTML=b+" has been liked <span>1</span> time",c.appendChild(d)}),pause.addEventListener("click",function(){playing?(playing=!1,clearInterval(interval),this.innerText="resume"):(playing=!0,interval=timer(),this.innerText="pause"),[].concat(_toConsumableArray(document.getElementsByTagName("button"))).forEach(function(a){"pause"!==a.id&&(a.disabled=!playing)})}),commentForm.addEventListener("submit",function(a){a.preventDefault();var b=this.children[0],c=b.value;b.value="";var d=document.querySelector(".comments"),e=document.createElement("p");e.innerText=c,d.appendChild(e)});
document.addEventListener('DOMContentLoaded', function() {
    const counter = document.getElementById('counter');
    let count = 0;
    const plusBtn = document.getElementById('plus');
    const minusBtn = document.getElementById('minus');
    const likeBtn = document.getElementById('heart');
    const pauseBtn = document.getElementById('pause');
    const commentForm = document.getElementById('comment-form');
    const commentInput = document.getElementById('comment-input');
    const commentList = document.getElementById('list');
    const likes = {};

    // Timer functionality
    let timerInterval;

    function startCounter() {
        timerInterval = setInterval(function() {
            count++;
            counter.textContent = count;
        }, 1000);
    }

    startCounter();

    // Plus button functionality
    plusBtn.addEventListener('click', function() {
        count++;
        counter.textContent = count;
    });

    // Minus button functionality
    minusBtn.addEventListener('click', function() {
        count--;
        counter.textContent = count;
    });

    // Like button functionality
    likeBtn.addEventListener('click', function() {
        if (!likes[count]) {
            likes[count] = 1;
        } else {
            likes[count]++;
        }
        // Update display of likes here if needed
    });

    // Pause and resume functionality
    pauseBtn.addEventListener('click', function() {
        if (pauseBtn.textContent === 'pause') {
            clearInterval(timerInterval);
            plusBtn.disabled = true;
            minusBtn.disabled = true;
            likeBtn.disabled = true;
            commentInput.disabled = true; // Disable comment input if needed
            pauseBtn.textContent = 'resume';
        } else {
            startCounter();
            plusBtn.disabled = false;
            minusBtn.disabled = false;
            likeBtn.disabled = false;
            commentInput.disabled = false; // Enable comment input if needed
            pauseBtn.textContent = 'pause';
        }
    });

    // Comment functionality (assuming form submission adds comments to list)
    commentForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const commentText = commentInput.value;
        const commentItem = document.createElement('li');
        commentItem.textContent = commentText;
        commentList.appendChild(commentItem);
        commentInput.value = '';
    });
});
